{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Debits.js","components/Credits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","htmlFor","type","onChange","Debits","debits","map","debit","date","slice","amount","description","id","addDebit","Credits","credits","addCredit","App","logInInfo","newUser","currentUser","event","newDebit","newDebitId","toString","Date","toISOString","newBalance","Number","toFixed","newCredit","newCreditId","console","log","a","creditsAPI","axios","get","debitsData","creditsData","data","totalCredits","reduce","totalAmount","credit","totalDebits","message","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0af58765.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","// src/components/Home.js\n// The Home component is used to demonstrate the use of Link.\n\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        \n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","// src/components/UserProfile.js\n// The UserProfile component is used to demonstrate the use of Route and Link.\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n        <div>\n          <h1>User Profile</h1>\n\n          <div>Username: {this.props.userName}</div>\n          <div>Member Since: {this.props.memberSince}</div>\n          \n          <Link to=\"/\">Return to Home</Link>\n        </div>\n    );\n  }\n}\n\nexport default UserProfile;","// src/components/Login.js\n// The LogIn component is used to demonstrate the use of Redirect.\n\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {  // Create and initialize state\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  // When the user name input is changed, capture the input and update the state (user.userName)\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n  \n  render () {\n    if (this.state.redirect) {  // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n    // Render the login form\n    return (\n      <div>\n        <h1>Login</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>                  \n      </div>\n    )\n  }\n}\n\nexport default LogIn","// src/components/Debits.js\n\nimport AccountBalance from './AccountBalance';\n\nconst Debits = (props) => {\n\tlet debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {\n      let date = debit.date.slice(0,10);\n      return <li key={debit.id}>{debit.amount} {debit.description} {date}</li>\n    }) \n  }\n  return (\n    <div>\n      <h1>Debits</h1>\n      {debitsView()}\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <AccountBalance accountBalance={props.accountBalance}/>\n    </div>\n  )\n}\n\nexport default Debits;","// src/components/Credits.js\n\nimport AccountBalance from './AccountBalance';\n\nconst Credits = (props) => {\n\tlet creditsView = () => {\n    const { credits } = props;\n    return credits.map((credits) => {\n      let date = credits.date.slice(0,10);\n      return <li key={credits.id}>{credits.amount} {credits.description} {date}</li>\n    }) \n  }\n  return (\n    <div>\n      <h1>Credits</h1>\n      {creditsView()}\n      <form onSubmit={props.addCredit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Credits</button>\n      </form>\n      <AccountBalance accountBalance={props.accountBalance}/>\n    </div>\n  )\n}\n\nexport default Credits;","// src/App.js\n\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Debits from './components/Debits';\nimport Credits from './components/Credits';\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '07/23/96',\n      },\n      credits: [],\n      debits: [],\n      newDebitId: 1,\n      newCreditId: 1\n    }\n  }\n\n  async componentDidMount() {\n    //define API url\n    const debitsAPI = \"https://moj-api.herokuapp.com/debits\";\n    const creditsAPI = \"https://moj-api.herokuapp.com/credits\";\n\n    try {\n      //update states\n      let debitsData = await axios.get(debitsAPI);\n      let creditsData = await axios.get(creditsAPI);\n      this.setState({debits: debitsData.data});\n      this.setState({credits: creditsData.data});\n      //give the account balance an initial value\n      let totalCredits = this.state.credits.reduce((totalAmount, credit) => totalAmount + credit.amount, 0);\n      let totalDebits = this.state.debits.reduce((totalAmount, debit) => totalAmount + debit.amount, 0);\n      let accountBalance = totalCredits - totalDebits;\n      this.setState({accountBalance: accountBalance.toFixed(2)});\n    } catch (error) {\n      console.log(error.message);\n    }\n\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  addDebit = (event) => {\n    event.preventDefault(); // prevent the form from submitting\n    const amount = event.target.amount.value;\n    const description = event.target.description.value;\n    const newDebit = {\n      id: this.state.newDebitId.toString(), \n      description: description, \n      amount: amount, \n      date: new Date().toISOString()\n    };\n    this.setState({newDebitId: this.state.newDebitId + 1});\n    this.setState({debits: [...this.state.debits, newDebit]});\n    const newBalance = Number(this.state.accountBalance) - Number(newDebit.amount);\n    this.setState({accountBalance: newBalance.toFixed(2)});\n  }\n\n  addCredit = (event) => {\n    event.preventDefault(); // prevent the form from submitting\n    const amount = event.target.amount.value;\n    const description = event.target.description.value;\n    const newCredit = {\n      id: this.state.newCreditId.toString(), \n      description: description, \n      amount: amount, \n      date: new Date().toISOString()\n    };\n    console.log(this.state.newCreditId)\n    this.setState({newCreditId: this.state.newCreditId + 1});\n    this.setState({credits: [...this.state.credits, newCredit]});\n    const newBalance = Number(this.state.accountBalance) + Number(newCredit.amount);\n    this.setState({accountBalance: newBalance.toFixed(2)});\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance}/>);\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}  />\n    );\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)  // Pass props to \"LogIn\" component\n    const DebitsComponent = () => (<Debits debits={this.state.debits} addDebit={this.addDebit} accountBalance={this.state.accountBalance} />)\n    const CreditsComponent = () => (<Credits credits={this.state.credits} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />)\n    return (\n      <Router basename=\"/bank-of-react\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}